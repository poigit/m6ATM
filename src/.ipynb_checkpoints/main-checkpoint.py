import argparse
from m6atm.preprocess.m6atm import *
from m6atm.train.predict import *
from m6atm.train.run_model import *

__version__ = '0.0.3'

def main():
    
    ### main parser
    parser = argparse.ArgumentParser(prog = 'm6atm', description = 'm6ATM v0.0.3')
    subparsers = parser.add_subparsers(help = 'modules', metavar = '{run, preprocess, predict, visualize}')
    parser.add_argument('-v', '--version', action = 'version', version = 'm6ATM %s'%(__version__))
    
    ### m6atm 'run'
    subparser3 = subparsers.add_parser('run', help = 'all-in-one command for quick m6A detection')
    
    req3 = subparser3.add_argument_group('Required')
    req3.add_argument('-f', '--fastq', dest = 'fastq', metavar = '\b', type = str, required = True, help = 'fastq directory generated by Guppy basecaller')
    req3.add_argument('-b', '--bam', dest = 'bam', metavar = '\b', type = str, required = True, help = 'path to bam file')
    req3.add_argument('-r', '--ref', dest = 'ref', metavar = '\b', type = str, required = True, help = 'path to reference transcriptome')
    req3.add_argument('-o', '--out', dest = 'out', metavar = '\b', type = str, required = True, help = 'output directory')
    
    opt3 = subparser3.add_argument_group('Optional')
    opt3.add_argument('-P', '--prefix', dest = 'prefix', metavar = '\b', type = str, default = 'default', help = 'output file prefix')
    opt3.add_argument('-N', '--processes', dest = 'n_proc', metavar = '\b', type = int, default = 1, help = 'number of processes (default: 1)')
    opt3.add_argument('-M', '--mem', dest = 'mem', metavar = '\b', type = str, help = 'max memory use per process (default: 10GB)', default = '10GB')
    opt3.add_argument('-p', '--port', dest = 'port', metavar = '\b', type = str, help = 'port for dask scheculer (default: 8788)', default = '8788')
    opt3.add_argument('-l', '--min_len', metavar = '\b', type = int, help = 'minimum read length (default: 500)', default = 500)
    opt3.add_argument('-L', '--max_len', metavar = '\b', type = int, help = 'maximum read length (default: 20000)', default = 20000)
    opt3.add_argument('-s', '--min_read', metavar = '\b', type = int, help = 'minimum read number at each site (default: 20)', default = 20)
    opt3.add_argument('-S', '--max_read', metavar = '\b', type = int, help = 'maximum read length at each site (default: 1000)', default = 1000)
    
    opt3.add_argument('-t', '--tx', dest = 'tx', metavar = '\b', type = str, help = 'transcript table from UCSC')
    opt3.add_argument('-R', '--ref_gn', dest = 'ref_gn', metavar = '\b', type = str, help = 'path to reference genome')
    opt3.add_argument('-T', '--thres', dest = 'thres', metavar = '\b', type = float, default = 0.9, help = 'probability threshold (default: 0.9)')
    opt3.add_argument('-x', '--device', dest = 'device', metavar = '\b', type = str, default = 'cuda:0', help = '<cuda:id> or <cpu> (default: cuda:0)')
    
    opt3.add_argument('-Q', '--mode', dest = 'mode', metavar = '\b', type = str, default = 'run', help = 'run/preprocess/predict')
    
    dev3 = subparser3.add_argument_group('Development')
    dev3.add_argument('--keep_file', help = 'keep intermediate files', default = False, action = 'store_true')
    
    subparser3.set_defaults(func = run)

    args = parser.parse_args()
    args.func(args)